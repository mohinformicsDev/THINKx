# This is a basic workflow to help you get started with Actions

name: NX project workflow

# Controls when the action will run.
on:
  # Triggers the workflow on push or pull request events but only for the main branch
  push:
    branches: [main]
#   pull_request:
#     branches: [main]

# A workflow run is made up of one or more jobs that can run sequentially or in parallell
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest
    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      #         - uses: actions/cache@v2
      #           with:
      #             path: ~/.npm
      #             key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
      #             restore-keys: |
      #               ${{ runner.os }}-node-

      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2
        with:
          targets: build
          projects: thinkx,api
          parallel: true
          maxParallel: 10
        
      - uses: MansaGroup/nrwl-nx-action@v2.1.0
        

        name: Running npm ci
      - run: npm ci

        name: build frontend
      - run: npm run nx -- build thinkx --prod

        name: build backend
      - run: npm run nx -- build api --prod

        name: compressing output
      - run: npm pack

        name: copy file via ssh password
      - uses: appleboy/scp-action@master
        with:
          host: ${{ secrets.SERVER_IP }}
          username: ${{ secrets.SERVER_USERNAME }}
          password: ${{ secrets.SERVER_PASSWORD }}
          port: ${{ secrets.SERVER_PORT }}
          source: "thinkx-0.0.0.tgz"
          target: "./"

      - name: unzip gz file and restart pm2
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.SERVER_IP }}
          username: ${{ secrets.SERVER_USERNAME }}
          password: ${{ secrets.SERVER_PASSWORD }}
          port: ${{ secrets.SERVER_PORT }}
          script: |
            tar -xzvf thinkx-0.0.0.tgz 
            ./server-start.sh
            
            
            
#         - name: Create Release
#           id: create_release
#           uses: actions/create-release@v1
#           env:
#             GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
#           with:
#             tag_name: ${{ github.ref }}
#             release_name: Release ${{ github.ref }}
#             draft: false
#             prerelease: false
#             asset_path: ./thinkx-0.0.0.tgz
#             asset_name: ./thinkx-0.0.0.tgz
#             asset_content_type: application/gzip

